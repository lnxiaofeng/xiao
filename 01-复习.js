/**
 * 1. 函数
 *    函数就是代码复用的一种机制或是封装某种功能的代码段   tellStory()
 * 
 * 2. 函数的三要素
 *     函数名称  函数的名称一般就体现了函数的功能是什么  函数名称一般是一个动词
 *     参数
 *        形参   在定义函数的时候，写的参数就是形参  形参只属于函数内部  起占位置的作用
 *        实参   在调用函数的时候，传入的真正的数据，就是实参，是有实际意义的数据值
 *     返回值  js中的返回值非常奇葩，函数只要调用就会有返回值(包含undefined)
 *        如果一个函数当中有显示的使用return关键字，则return后面的数据就是这个函数的返回值,undefined则不存在
 *        如果一个函数当中有显示的使用return关键字,但是return后面没有数据,则这个函数的返回值是undefined
 *        如果一个函数当中没有显示的使用return关键字,则这个函数的返回值是undefined
 *        也就是说，函数中只要有数据返回，就一定得使用关键字return
 *    
 * 3. 定义函数的两种方式
 *      函数声明的方式   用的最多的方式 
 *       function  函数名称([参数列表...]){
 *          函数体;
 *       }
 *    
 *      使用函数表达式的方式来定义函数
 *      var fn = function([参数列表...]){
 *        函数体;
 *      }
 *      
 *     两者的区别:
 *      1. 函数声明的方式定义的函数，在哪里调用都是可以的
 *      2. 函数表达式的方式定义的函数，必须在表达式的后面来调用
 * 
 * 4. 预解析 
 *      在js解析器在真正的执行代码之前,会先将js代码全部扫描一遍,会将函数的声明，变量的声明提升到当前作用域的最前面，而变量的赋值还是在原位置进行赋值。
 * 
 * 5. 作用域 
 *     全局作用域: 页面中一对script标签之间就是一个全局作用
 *     局部作用域: 函数的大括号内部就是一个局部作用域
 *     局部作用域可以访问全局作用域中的数据
 *    
 *     全局变量:  在全局作用域中使用var声明的变量，在函数内部不使用var声明的变量也是全局变量
 *     局部变量:  在函数的大括号内使用var声明的变量,才是局部变量,局部变量只能在函数内部使用
 *    
 *  IP地址是用来定位网络上的终端设备   PC，手机，平板，智能家电   就相当于咱们的津安创意园
 *  端口就是用来分区不同的应用的      我们的门牌号
 *    
 *  能够使用arguments获取函数的所有参数
 *  能够写出匿名函数和自调用函数的基本结构
 *  能够说出Math对象的3个方法
 *  能够说出Date对象的3个方法
 */